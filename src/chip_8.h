#ifndef CHIP_8_CHIP_8_H
#define CHIP_8_CHIP_8_H

#include <array>

const int DISPLAY_SIZE = 2056;
const int MEM_SIZE = 4096;
const int FONTSET_SIZE = 80;

class chip_8 {
private:
    std::array<unsigned char, MEM_SIZE> memory;
    std::array<unsigned char, 16> V; // Registers V0-VF

    std::array<unsigned char, DISPLAY_SIZE> screen;
    std::array<unsigned char, 16> keypad;

    std::array<unsigned short, 16> stack;
    unsigned short stack_pointer;

    unsigned short instruction_pointer;
    unsigned short index_regiser;
    unsigned short opcode;

    unsigned char delay_timer;
    unsigned char sound_timer;

    void init(void);

public:
    bool execute_instruction(void);
    bool load(std::string file_path);

    const std::array<unsigned char, FONTSET_SIZE> fontset {
        0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
        0x20, 0x60, 0x20, 0x20, 0x70, // 1
        0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
        0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
        0x90, 0x90, 0xF0, 0x10, 0x10, // 4
        0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
        0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
        0xF0, 0x10, 0x20, 0x40, 0x40, // 7
        0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
        0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
        0xF0, 0x90, 0xF0, 0x90, 0x90, // A
        0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
        0xF0, 0x80, 0x80, 0x80, 0xF0, // C
        0xE0, 0x90, 0x90, 0x90, 0xE0, // D
        0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
        0xF0, 0x80, 0xF0, 0x80, 0x80, // F
    };
};

#endif
